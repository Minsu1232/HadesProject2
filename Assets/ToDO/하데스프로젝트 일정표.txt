1주차: 데이터 관리 시스템 및 기본 전투 시스템 기초 작업
CSV와 JSON 파일 구조 설계 및 연동 작업

CSV 파일 설계: 몬스터 기본 스탯, 아이템 기본 정보, 드롭 테이블, 스킬 밸런스 수치 등의 CSV 파일 구조 설계.
JSON 파일 설계: 스킬 상세 정보와 로직, 유저 진행 데이터, 퀘스트 상태 관리 파일 구조 설계.
파서 구현: Unity에서 CSV와 JSON 파일을 불러와 CharacterData, MonsterData, SkillData 등에 매핑하는 스크립트 작성.
테스트: 예시 데이터를 넣어 파일이 정상적으로 로드되고 필요한 정보가 스크립트와 연동되는지 확인.
기본 전투 시스템 설계

기본 공격 및 강공격 구현: 좌클릭으로 기본 공격, 우클릭으로 강공격을 실행할 수 있도록 설계.
데미지 계산 로직: 무기 타입에 따라 데미지와 치명타 확률이 반영되는 기본 전투 계산 로직 작성.
타격감 개선 : 히트스탑 카메라무빙


2주차: 스킬 시스템 및 기초 UI 구현
스킬 시스템 기초 작업

기력(에너지) 시스템 구현: 각 무기 타입별로 공격 시 기력 게이지가 충전되도록 설정.
스킬 발동 로직 구현: 기력이 100%일 때 Q 키로 스킬을 발동하는 로직 작성.
JSON과 연동한 스킬 로직: JSON 데이터와 연동하여 각 무기 스킬이 올바르게 발동되도록 로직 세부 조정.
기초 UI 디자인 및 연결

기력 게이지 UI: 각 무기별로 기력 게이지가 차는 UI 구성.
체력 및 스킬 UI: 체력 표시와 스킬 아이콘, 쿨다운 등이 표시되는 UI 프로토타입 작성.
데이터 연동: CSV/JSON 데이터를 UI와 연동하여 기력 차징, 체력, 스킬 발동 상태를 UI로 시각화.


3주차: 챕터 1 맵 제작 및 몬스터 설정
챕터 1 맵 기초 설계

혼돈의 영역 테마 적용: 어둠과 안개로 덮인 미로 형태의 맵 프로토타입 작성.
장애물 및 함정 배치: 기초적인 함정과 장애물을 배치하여 미로의 긴장감을 강화.
몬스터 AI 기초 작업

기본 몬스터 AI 구현: 기본적인 적 탐지와 공격 패턴을 설정하여 플레이어를 추적하고 공격하도록 구현.
몬스터 스탯 연동: CSV 파일의 몬스터 데이터를 AI와 연결하여 몬스터마다 스탯이 적용되도록 설정.
테스트: 플레이어와 몬스터 간의 전투가 자연스럽게 이루어지는지 기초 테스트.


4주차: 아이템 시스템 및 드롭 테이블 구현
아이템 시스템 초기 작업

아이템 생성 및 획득 로직: 적 처치 시 아이템이 드롭되도록 설정하고, 플레이어가 아이템을 획득할 수 있는 로직 구현.
아이템 효과 적용: 아이템 사용 시 효과가 적용되도록 설정 (예: 체력 회복, 기력 회복 등).
아이템 데이터 연동: CSV 파일의 아이템 데이터를 JSON과 연결하여 아이템 효과가 적용되도록 설정.
드롭 테이블 설정

드롭 확률 연동: CSV의 드롭 테이블을 불러와 아이템이 확률적으로 드롭되도록 구현.
테스트 및 조정: 드롭 확률과 아이템 획득 효과가 정상적으로 작동하는지 테스트.