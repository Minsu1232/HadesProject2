하데스프로젝트 : 하데스 게임에서 영감 받아 연습 겸 만드는 프로젝트 입니다 11/7일 시작

11/7 : 기초적인 캐릭터의 기반만 다져놓았습니다. 

1. 기반Class는 2개(Warrior,Magician으로 나뉨) 기반 클래스는 인터페이스(IPlayer)만 상속받는 추상 클래스 => 모노비헤비어의 상속을 벗어나 조금 더 유연성을 주기 위함

2. 자식 클래스에서 조금 더 구체적인 기능 작성 후 게임 시작시 선택 후 이니셜라이저를 초기화 할 예정(현잰 임시로 워리어 데이터로...)

3. 이니셜라이저를 싱글턴을 통해 초기화 된 데이터로 실제 유니티 라이프 사이클로 로직 실행 예정 (현재는 무브 컴포넌트만 존재)


 11/8 : 몬스터 생성(맵에 따른 생성 변화) 및 공격 / 캐릭터 애니메이션(무기에 따른 애니메이션 변화)의 기능 기반 다져놓았습니다.

1. 게임 진행은 랜덤한 맵으로 갈 예정(맵의 컨셉에 따라 팩토리 패턴을 통해 몬스터 스폰 예정 현재 기반클래스와 테스트클래스 만들어둠)

2. 캐릭터는 던전 입장 전에 무기를 고르고 그 무기를 쭉 성장시키며 던전을 돌 예정(현재 게엠이니셜라이저로 정보를 뿌리며 공격베이스 클래스와 유니티 싸이클을 돌릴 플레이어 어택,
IWeapon을 상속받는 IWeapon 그리고 무기별 애니메이션 오버라이딩, 테스트용으로 버튼에 두손검을 장착하는 시스템 까지 구축 완료)


11/9 : 애니메이션에 꽂혀 애니메이션 콤보를 다져둠.

1. 이제 콤보공격과 콤보에 맞는 데미지 리턴 가능. 앞으로 무기마다 잡아줄 예정 현재 콜라이더로 데미지를 주는 형식이라 제어가 좀 필요함

11/12 : 현재 다른 Refactoring 프로젝트를 하나 복사해 만들어서 거기서 작업중. 조금더 유연성과 확장성 갖기 위해 캐릭터의 무기별 애니메이터는 오버라이딩이 아닌 아예 바꾸기로.

데미지 구조는 IDamageable을 추가해 몬스터 캐릭터에 상속 시켜 이거로 TakeDamage호출 

1. 진행도 : 몬스터와 캐릭터 간 서로 타격,피격 가능 캐릭터는 시작시 맨손 > 던전 입장시 무기선택 > 해당에 맞는 무기애니메이션과 무기 데미지, 무기장착 (현잰 대검으로 테스트) 
	  무기별 IWeapon과 WeaponBase를 기반으로 대검 = GreatSword로 이들을 상속해 받는중

2. 다음은 대검의 특수성을 GreatSword 스크립트에서 구성 할 예정 (현재는 대검을 들면 분노게이지 및 타격 몬스터에게 슬로우나 디버프를 줄 예정)

11/12~18 : 리팩토링(진행중) csv,json으로 파일 작성 및 로드 완료

11/19 : 무기 관련 리팩토링 진행중 - 기존 구조(BaseWeapon의 결합도가 높고 인터페이스의 불필요성이 있었음)을 변경해 WeaponManager를 기반으로 무기별 특성을 인터페이스로 살리기,
		                   - 무기의 데이터 저장 및 로드는 CSV로 진행(인게임에서 변하기는 하나 복잡한 구조가 아님)

11/20 :	차징 공격(우클릭) 구현

  코드 구조 개선 및 제작- IPlayerClass가 보니 몬스터와 겹치는 부분이 많아 ICreature로 변경 후 재할당
		      - CharacterAttackBase의 애니메이터를 animationController작성 후 대체 ( 향후 애니메이션 로직이 추가 될 가능성을 감안 )
		      - WeponChargeBase제작 (차징공격 기반 추상클래스, MonoBehaviour상속X 생성자로 해당 무기에 생성) WeaponManager의 데이터값들을 사용
	                  - 프레임워크용 GreatSword의 Charge클래스 생성(WeponChargeBase상속) 후 PerformChargeAttack override(대검만의 차지공격 구현)
	                  - WeaponManager에 IsChargeAttack 추가 (기본공격,강공격 구분용) 
                              - WeaponBase에 OnChargeAttackEnd(IsChargeAttack를 false시켜주는 애니메이션 이벤트)매서드 추가
                              - MeleeWeaponHandler의 GetDamage매서드에 차징어택시 다른 계산식 추가
		

11/21 : 히트스탑 구현, AttackData 추가 (어택의 타입을 정하기 위해)
	1 히트시 피격오브젝트의 움직임도 추가 단. 히트박스는 그대로일것< 애매
	2 땅을 기준으로 수평으로 이동할 것
	3 움직임의 크기는 점차 줄어들기
	4 일반공격과 차징공격 그리고 스킬상태의 공격마다 흔들림이 다를것
	5 해당 게임은 플레이어와 카메라의 거리가 어느정도 있기 때문에 카메라도 조금은 같이 흔들릴것


11/22 : 스페셜어택 구현, SpecialAttackBase 추가 (무기의 스페셜어택 컴포넌트)
	1 생성자, 실행, 파티클,사운드, 추상 매서드로 구현효과로 구성
	2 이를 상속받아 GreatSwordSpecialAttack 구현 
	3 대검은 버프로 버프증가 및 각종 데이터는 따로 스크립터블 만들어 Addresable로 할당 및 구현
	4 스킬을 한번 쓰면 로드한 메모리를 유지하며 파티클은 온오프로 관리, 이후 던전 관리 시스템시 종료때 릴리즈 예정
	 


11/24 : UIManager생성 및 PlayerClass의 스탯변수들을 Stats로 나누어 관리
	1 Stats는 플레이어의 스탯변수들을 프로퍼티로 만들어둠
	2 플레이어클래스는 이를 생성자로 받으며 해당 매개변수에 스크립터블의 변수 할당
	3 UI매니저는 이벤트기반으로 변동시 자동으로 바뀌게, 모든 변동UI는 여기서 관리


11/25 : 흩어져있던 무기 할당 및 생성 로직을 WeaponFactory와 WeaponService 스크립트를 만들어 합침,캐릭터어택베이스 리팩토링
	1 WeaponFactory는 딕셔너리로 웨폰의 이름과 컴포넌트 타입으로 관리함. 즉 무기 타입 관리 및 생성을 책임
	2 WeaponService는 선택한 무기의 관리, 이벤트 관련 처리를 책임
	3 CharacterAttackBase의 애니메이션 관련 스트링을 static readonly와 Animator.StringToHash()를 이용해 변환 후 사용
	(성능 최적화 - 한번 변환 후 사용 스트링보다 인트가 효율적, 오타 방지)

	
11/26 : 스크립터블에 무기별 게이지 색상 변수 추가, 차징게이지도 이벤트화 하여 유아이매니저에서 관리(발생은 일단 CharacterAttackBase에서 )
	1 주석 및 리전으로 스크립트 청소(PlayerClass와 WeaponManager만 진행)

11/27~ : 맵 에셋 구매 및 손맵 제작 진행중 (1-1~1-10까지 예정)

12/10 : 손맵 제작 후 펜스(이동제한 콜라이더)생성 툴 제작 - Scene에 클릭(기즈모로 표현)으로 좌표들을 이어 펜스 제작

12/19 : 제작 완료

12/20 ~ : 몬스터AI 제작중 - 현재 State패턴과 전략 패턴 그리고 BTree를 통해 몬스터들의 AI를 관리 할 예정

12/23 : 각종 전략들 생성, 현재 Basic류만 있으며 이후 특별한 케이스들도 따로 만들 수 있게 외부에서 주입. (CSV와 팩토리스크립트로 외부에서 주입)

----------------------------------------------------------------------------------------------------------------

최근 1달반

몬스터 4종류와 중간보스 1마리 제작 완료

Attack은 Basic과 Jumpt를 Skill류엔 비행체 - 직선 및 포물선 이동 그리고 폭발 효과(공간장악스킬) 제작

먼저 MonsterAI와 각종 전략 및 패턴에 적용된 MonsterClass를 인터페이스 화로 변경 > 전략 및 패턴을 보스에서도 재활용 하기 위함.

보스만의 전략 및 상태(페이즈변환,기믹,패턴(공격전략 합치기 및 미니게임), 멀티공격전략(공격전략들을 넣고 가중치에 따라 공격전략선택))류 제작

작업 함에 있어 생각보다 버그가 많이 발생하여 2월초중반에 고침. 보통의 경우 페이즈 변환시 CanAttack 등 초기화의 문제였음. (문제해결일지에 작성)


2/12 - 기존에 만들어둔 BossUI와 종유석 기믹 비쥬얼 업데이트 - BossUI는 임시, 종유석은 Particle간단히 제작(먼지와 잔돌 떨어지는 느낌) 및 역동성을 위해 흔들림 추가(Sin사용)

다음 할일 - 1챕터의 중간 보스 제작 완료 및 이제 나머지 몬스터 제작 예정 - 이때 또 다른 어택전략과 스킬도 제작 예정

문제점 - 떨어지는 종유석이 역동성이 여전히 떨어지게 느껴짐, BossUI의 디자인이 전체적으로 에셋없는 부분이 많아 부족함이 느껴짐



2/15 - BossUI에서 Gimmick관련 UI 개선 => 던전앤파이터 패턴 UI 착안


2/16 - MultiShot스킬전략 제작 => 애니메이션 이벤트에 OnSkillEffect를 원하는 타이밍에 발사하게끔 가능

	일반몬스터 제작 매뉴얼, 스킬제작매뉴얼, 전략 및 각종 Type들 단어 정리 완료

	1-6 몬스터 Ray 제작 (basic공격,multi스킬)

	다음 할일 - 1-9까지의 몬스터 제작 (약 2마리 정도) 후 1챕터의 보스 제작

2/17 - Ray, Warm(ID 6,7번) 몬스터 제작
	
	현재 투사체들이 날라갈때 좀 심심해 보여서 트레일렌더러 제작중. 추후 종유석기믹 등에 합쳐볼 예정


2/18 - Rat(ID 8번) 몬스터 제작 및 나선형 트레일렌더러 제작 완료 종유석 및 비행체에 결합 완료

	기존에 attakstate이후 여전히 공격범위 안이지만 간혈적으로 무브가 되는 현상 수정 => IDlestate와 Btree간 변환 충돌이 있었음. state는 상태효과에만 집중하도록 변경 및 애니메이션 트리거 변수가 잘못된거 수정 => Warm에서 한번 꼬임

	기존 attackstate에서 기존에 보스만들 때 문제였던 Excute부분을 지워 공격상태에서 나오지 못하는 상황 => Excute에 이즈어택킹이 끝났다면 Movestate로 변경
	
	다음 할일 - 1챕터 보스 제작 -

2/19~21 - Chapter1 보스 Alexander 기획 중간 완료 / 각 챕터 보스들만의 스크립터블과 데이터들 CSV제작 예정 

	현재 1챕터보스만 AlexanderBossData 스크립터블과 csv 제작 완료 Essence게이지 UI및 madness게이지 스크립트 작성/BossMonster를 상속하는 AlexanderBoss 제작 >> 에센스 증가 및 감소 그리고 효과를 위해 

	1-10 맵자체에 CanvasUI와 EssenceUIManager까지 넣어둔 상태. << 이부분은 차후 어떤식으로 관리 및 확장할지 고민중

	기존 BossFactory에 생성자에 bossId넣는 부분을 CrabBossFactory, AlexanderFactory로 분리 따로 관리 던전매니저도 열거형 수정 및 추가

	생성 생성 후 1-10 BossEssenceUI 연동 확인
	
	Y를 누르면 10증가 T누르면 10감소 테스트 완료

	Commit = Alexander/EssenceUI

	
